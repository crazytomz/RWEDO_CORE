// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RWEDO.DataTransferObject;

namespace RWEDO.DataTransferObject.Migrations
{
    [DbContext(typeof(RWEDODbContext))]
    [Migration("20201119183954_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RWEDO.DataTransferObject.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Opened"
                        },
                        new
                        {
                            ID = 2,
                            Description = "File Received"
                        },
                        new
                        {
                            ID = 3,
                            Description = "File Received"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Surveyed"
                        },
                        new
                        {
                            ID = 5,
                            Description = "Estimate Received"
                        },
                        new
                        {
                            ID = 6,
                            Description = "Bill Received"
                        },
                        new
                        {
                            ID = 7,
                            Description = "Report Prepared"
                        },
                        new
                        {
                            ID = 8,
                            Description = "Report Submitted"
                        });
                });

            modelBuilder.Entity("RWEDO.DataTransferObject.SurveyFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillDate")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Date")
                        .HasMaxLength(20);

                    b.Property<string>("EstimateDate")
                        .HasMaxLength(20);

                    b.Property<DateTime>("FollowUpDate");

                    b.Property<bool>("HasBill");

                    b.Property<bool>("HasEstimate");

                    b.Property<bool>("HasFile");

                    b.Property<int>("Index");

                    b.Property<string>("Insured")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("InsurerID");

                    b.Property<string>("RepairerEmail")
                        .HasMaxLength(200);

                    b.Property<string>("RepairerName")
                        .HasMaxLength(250);

                    b.Property<int?>("StatusID");

                    b.Property<int>("SurveyorID");

                    b.HasKey("ID");

                    b.HasIndex("StatusID");

                    b.HasIndex("SurveyorID");

                    b.ToTable("SurveyFiles");
                });

            modelBuilder.Entity("RWEDO.DataTransferObject.Surveyor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(500);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<bool>("ISDeactivated");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(500);

                    b.Property<string>("Qualification")
                        .HasMaxLength(250);

                    b.HasKey("ID");

                    b.ToTable("Surveyors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "thomsonkvarkey@outlook.com",
                            ISDeactivated = false,
                            IdentityNumber = "Master",
                            Name = "SAdmin",
                            PhoneNumber = 0
                        });
                });

            modelBuilder.Entity("RWEDO.DataTransferObject.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ISAdmin");

                    b.Property<bool>("ISDeactivared");

                    b.Property<bool>("ISDeleted");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("SurveyorID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("UserRoleID");

                    b.HasKey("ID");

                    b.HasIndex("SurveyorID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ISAdmin = true,
                            ISDeactivared = false,
                            ISDeleted = false,
                            Password = "sa@2020",
                            SurveyorID = 1,
                            UserName = "sadmin",
                            UserRoleID = 1
                        });
                });

            modelBuilder.Entity("RWEDO.DataTransferObject.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ISInternal");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ISInternal = true,
                            Name = "SAdmin"
                        },
                        new
                        {
                            ID = 2,
                            ISInternal = false,
                            Name = "CEO"
                        },
                        new
                        {
                            ID = 3,
                            ISInternal = false,
                            Name = "Employee"
                        });
                });

            modelBuilder.Entity("RWEDO.DataTransferObject.SurveyFile", b =>
                {
                    b.HasOne("RWEDO.DataTransferObject.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RWEDO.DataTransferObject.Surveyor", "Surveyor")
                        .WithMany()
                        .HasForeignKey("SurveyorID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RWEDO.DataTransferObject.User", b =>
                {
                    b.HasOne("RWEDO.DataTransferObject.Surveyor", "Surveyor")
                        .WithMany()
                        .HasForeignKey("SurveyorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RWEDO.DataTransferObject.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
